{
	"info": {
		"_postman_id": "73f701af-0329-4949-ae44-152ae0d82641",
		"name": "homework_29group",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Lessons",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let user_token = jsonData.token\r",
									"pm.environment.set(\"token\", user_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "Dmitry",
									"type": "text"
								},
								{
									"key": "password",
									"value": "1337",
									"type": "text"
								}
							]
						},
						"url": "http://162.55.220.72:5005/login"
					},
					"response": []
				},
				{
					"name": "UserInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"let req = JSON.parse(request.data)\r",
									"let req_salary = req.salary\r",
									"let req_age = req.age\r",
									"console.log(req)\r",
									"\r",
									"\r",
									"let salary_check_12 = req_salary * 2.9\r",
									"let salary_12 = jsonData.qa_salary_after_12_months\r",
									"let resp_age = jsonData.person.u_age\r",
									"\r",
									"console.log(salary_check_12)\r",
									"console.log(salary_12)\r",
									"\r",
									"\r",
									"console.log(\"req_salary =\", req_salary)\r",
									"\r",
									"pm.test(\"salary_check_12\", function () {\r",
									"    pm.expect(salary_12).to.eql(salary_check_12);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"age_check\", function () {\r",
									"    pm.expect(req_age).to.eql(resp_age);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{    \r\n    \"name\": \"Dmitry\",\r\n    \"age\" : 27,\r\n    \"salary\" : 800,\r\n    \"auth_token\" : \"{{token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}:{{PORT}}/user_info"
					},
					"response": []
				}
			]
		},
		{
			"name": "HomeWork_1",
			"item": [
				{
					"name": "EP_1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://162.55.220.72:5005/get_method?name=Dmitry&age=27",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "Dmitry"
								},
								{
									"key": "age",
									"value": "27"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Dmitry",
									"type": "text"
								},
								{
									"key": "age",
									"value": "27",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "800",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_1?name=Dmitry&age=27&weight=81",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_1"
							],
							"query": [
								{
									"key": "name",
									"value": "Dmitry"
								},
								{
									"key": "age",
									"value": "27"
								},
								{
									"key": "weight",
									"value": "81"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_2?name=Dmitry&age=27&salary=800",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "Dmitry"
								},
								{
									"key": "age",
									"value": "27"
								},
								{
									"key": "salary",
									"value": "800"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_3?name=Dmitry&age=27&salary=800",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Dmitry"
								},
								{
									"key": "age",
									"value": "27"
								},
								{
									"key": "salary",
									"value": "800"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_6",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=Dmitry&age=27&salary=800",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Dmitry"
								},
								{
									"key": "age",
									"value": "27"
								},
								{
									"key": "salary",
									"value": "800"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Dmitry",
									"type": "text"
								},
								{
									"key": "age",
									"value": "27",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "800",
									"type": "text"
								}
							]
						},
						"url": "http://162.55.220.72:5005/user_info_2"
					},
					"response": []
				}
			]
		},
		{
			"name": "HomeWork_2",
			"item": [
				{
					"name": "EP_1_v2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{URL}}:{{PORT}}/get_method?name={{name}}&age={{age}}",
							"host": [
								"{{URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_2_v2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{URL}}:{{PORT}}/user_info_3",
							"host": [
								"{{URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"user_info_3"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_3_v2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}:{{PORT}}/object_info_1?name={{name}}&age={{age}}&weight={{weight}}",
							"host": [
								"{{URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"object_info_1"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "weight",
									"value": "{{weight}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_4_v2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}:{{PORT}}/object_info_2?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"object_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_5_v2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}:{{PORT}}/object_info_3?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_6_v2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}:{{PORT}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_7_v2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": "{{URL}}:{{PORT}}/user_info_2"
					},
					"response": []
				}
			]
		},
		{
			"name": "HomeWork_3",
			"item": [
				{
					"name": "/first",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 1. Отправить запрос +\r",
									"// 2. Статус код 200 +\r",
									"// 3. Проверить, что в body приходит правильный string +\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://162.55.220.72:5007/first"
					},
					"response": []
				},
				{
					"name": "/user_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 1. Отправить запрос +\r",
									"\r",
									"// 2. Статус код 200 +\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// 3. Спарсить response body в json +\r",
									"    let jsonData = pm.response.json();\r",
									"// 7. Спарсить request. +\r",
									"    let req = (request.data)\r",
									"    console.log(req)\r",
									"\r",
									"    let res_age = jsonData.age\r",
									"    let res_name = jsonData.name\r",
									"    let res_salary = +jsonData.salary\r",
									"    let res_salary_1_5_year = jsonData.family.u_salary_1_5_year\r",
									"// console.log(res_salary_15month)\r",
									"// console.log(res_age, res_name, res_salary)\r",
									"\r",
									"// 11. Вывести в консоль параметр family из response. +\r",
									"console.log(jsonData.family)\r",
									"\r",
									"    let req_age = req.age\r",
									"    let req_name = req.name\r",
									"    let req_salary = +req.salary\r",
									"    let req_salary_1_5_year = req_salary * 4\r",
									"// console.log(req_salary_15month)\r",
									"// console.log(req_age, req_name, req_salary)\r",
									"\r",
									"  \r",
									"// 4. Проверить, что name в ответе равно name s request (name вбить руками.) +\r",
									"pm.test(\"name_test\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dmitry\");\r",
									"});\r",
									"\r",
									"// 5. Проверить, что age в ответе равно age s request (age вбить руками.) +\r",
									"pm.test(\"age_test\", function () {\r",
									"    pm.expect(jsonData.age).to.eql(\"27\");\r",
									"});\r",
									"\r",
									"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.) +\r",
									"pm.test(\"salary_test\", function () {\r",
									"    pm.expect(jsonData.salary).to.eql(800);\r",
									"});\r",
									"\r",
									"// 8. Проверить, что name в ответе равно name s request (name забрать из request.) +\r",
									"pm.test(\"name_test_from_request\", function () {\r",
									"    pm.expect(res_name).to.eql(req_name);\r",
									"});\r",
									"\r",
									"// 9. Проверить, что age в ответе равно age s request (age забрать из request.) +\r",
									"pm.test(\"age_test_from_request\", function () {\r",
									"    pm.expect(res_age).to.eql(req_age);\r",
									"});\r",
									"\r",
									"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.) +\r",
									"pm.test(\"salary_test_from_request\", function () {\r",
									"    pm.expect(res_salary).to.eql(req_salary);\r",
									"});\r",
									"\r",
									"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request) +\r",
									"pm.test(\"salary_test_1_5_year\", function () {\r",
									"    pm.expect(res_salary_1_5_year).to.eql(req_salary_1_5_year);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Dmitry",
									"type": "text"
								},
								{
									"key": "age",
									"value": "27",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "800",
									"type": "text"
								}
							]
						},
						"url": "http://162.55.220.72:5007/user_info_3"
					},
					"response": []
				},
				{
					"name": "/object_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 1. Отправить запрос. +\r",
									"\r",
									"// 2. Статус код 200 +\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// 3. Спарсить response body в json. +\r",
									"let jsonData = pm.response.json();\r",
									"let res_name = +jsonData.name\r",
									"let res_age = +jsonData.age \r",
									"let res_salary = +jsonData.salary \r",
									"// 4. Спарсить request. +\r",
									"let req = {};\r",
									"pm.request.url.query.all().forEach((param) => { req[param.key] = param.value});\r",
									"let req_name = +req.name\r",
									"let req_age = +req.age\r",
									"let req_salary = +req.salary\r",
									"console.log(req)\r",
									"// 8. Вывести в консоль параметр family из response. +\r",
									"console.log(jsonData.family)\r",
									"\r",
									"// 5. Проверить, что name в ответе равно name s request (name забрать из request.) +\r",
									"pm.test(\"name_test\", function () {\r",
									"    pm.expect(res_name).to.eql(req_name);\r",
									"});\r",
									"\r",
									"// 6. Проверить, что age в ответе равно age s request (age забрать из request.) +\r",
									"pm.test(\"age_test\", function () {\r",
									"    pm.expect(res_age).to.eql(req_age);\r",
									"});\r",
									"\r",
									"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)+\r",
									"pm.test(\"salary_test\", function () {\r",
									"    pm.expect(res_salary).to.eql(req_salary);\r",
									"});\r",
									"\r",
									"// 9. Проверить, что у параметра dog есть параметры name. +\r",
									"pm.test(\"dog_name_test\", function(){\r",
									"pm.expect(jsonData.family.pets.dog).to.have.any.keys('name');\r",
									"});\r",
									"\r",
									"// 10. Проверить, что у параметра dog есть параметры age.+\r",
									"pm.test(\"dog_age_test\", function(){\r",
									"pm.expect(jsonData.family.pets.dog).to.have.any.keys('age');\r",
									"});\r",
									"\r",
									"// 11. Проверить, что параметр name имеет значение Luky.+\r",
									"pm.test(\"name_Luky_test\", function(){\r",
									"pm.expect(jsonData.family.pets.dog.name).to.be.oneOf([\"Luky\"]);\r",
									"});\r",
									"\r",
									"// 12. Проверить, что параметр age имеет значение 4.+\r",
									"pm.test(\"age_4_test\", function(){\r",
									"pm.expect(jsonData.family.pets.dog.age).to.be.oneOf([+\"4\"]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Dmitry",
									"type": "text",
									"disabled": true
								},
								{
									"key": "age",
									"value": "27",
									"type": "text",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "800",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5007/object_info_3?name=Dmitry&age=27&salary=800",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5007",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Dmitry"
								},
								{
									"key": "age",
									"value": "27"
								},
								{
									"key": "salary",
									"value": "800"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/object_info_4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// http://162.55.220.72:5007/object_info_4\r",
									"// 1. Отправить запрос.\r",
									"\r",
									"// 2. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// 3. Спарсить response body в json.\r",
									"let res = pm.response.json();\r",
									"let res_age = +res.age\r",
									"let res_name = +res.name\r",
									"let res_salary = +res.salary\r",
									"\r",
									"// 4. Спарсить request.\r",
									"let req = {};\r",
									"pm.request.url.query.all().forEach((param) => { req[param.key] = param.value});\r",
									"let req_age = +req.age\r",
									"let req_name = +req.name\r",
									"let req_salary = +req.salary\r",
									"console.log(req)\r",
									"\r",
									"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
									"pm.test(\"name_test\", function () {\r",
									"    pm.expect(res_name).to.eql(req_name);\r",
									"});\r",
									"\r",
									"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
									"pm.test(\"age_test\", function () {\r",
									"    pm.expect(res_age).to.eql(req_age);\r",
									"});\r",
									"// 7. Вывести в консоль параметр salary из request.\r",
									"console.log(req.salary)\r",
									"\r",
									"// 8. Вывести в консоль параметр salary из response.\r",
									"console.log(res.salary)\r",
									"\r",
									"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
									"console.log(res.salary[0])\r",
									"\r",
									"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
									"console.log(+res.salary[1])\r",
									"\r",
									"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
									"console.log(+res.salary[2])\r",
									"\r",
									"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
									"pm.test(\"salary_0_test\", function () {\r",
									"    pm.expect(res.salary[0]).to.eql(req_salary);\r",
									"});\r",
									"\r",
									"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
									"pm.test(\"salary_1_test\", function () {\r",
									"    pm.expect(+res.salary[1]).to.eql(+req_salary*2);\r",
									"});\r",
									"\r",
									"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
									"pm.test(\"salary_2_test\", function () {\r",
									"    pm.expect(+res.salary[2]).to.eql(+req_salary*3);\r",
									"});\r",
									"\r",
									"// 15. Создать в окружении переменную name\r",
									"// 16. Создать в окружении переменную age\r",
									"// 17. Создать в окружении переменную salary\r",
									"\r",
									"// 18. Передать в окружение переменную name\r",
									"let name = res.name\r",
									"pm.environment.set(\"name\", name);\r",
									"\r",
									"// 19. Передать в окружение переменную age\r",
									"let age = res.age\r",
									"pm.environment.set(\"age\", age);\r",
									"\r",
									"// 20. Передать в окружение переменную salary\r",
									"let salary = res.salary\r",
									"pm.environment.set(salary, salary);\r",
									"\r",
									"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
									"for (let i = 0; i <= 2; i++) {\r",
									"    console.log(res.salary[i])\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Dmitry",
									"type": "text",
									"disabled": true
								},
								{
									"key": "age",
									"value": "27",
									"type": "text",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "800",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5007/object_info_4?name=Dmitry&age=27&salary=800",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5007",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Dmitry"
								},
								{
									"key": "age",
									"value": "27"
								},
								{
									"key": "salary",
									"value": "800"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/user_info_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// http://162.55.220.72:5005/user_info_2\r",
									"// 1. Вставить параметр salary из окружения в request\r",
									"// 2. Вставить параметр age из окружения в age\r",
									"// 3. Вставить параметр name из окружения в name\r",
									"// 4. Отправить запрос.\r",
									"// 5. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// 6. Спарсить response body в json.\r",
									"let res = pm.response.json();\r",
									"let res_salary_1and5_years = res[\"qa_salary_after_1.5_year\"]\r",
									"let res_salary_12_month = res.qa_salary_after_12_months\r",
									"let res_salary_3and5_years = res[\"qa_salary_after_3.5_years\"]\r",
									"let res_salary_6_month = res.qa_salary_after_6_months\r",
									"let res_start_qa_salary = res.start_qa_salary\r",
									"let res_salary_5_years = res.person.u_salary_5_years\r",
									"\r",
									"\r",
									"// 7. Спарсить request.\r",
									"let req = (request.data)\r",
									"let req_salary = req.salary\r",
									"\r",
									"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
									"pm.test(\"start_qa_salary_test\", function(){\r",
									"pm.expect(res).to.have.any.keys('start_qa_salary');\r",
									"});\r",
									"\r",
									"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
									"pm.test(\"qa_salary_after_6_months_test\", function(){\r",
									"pm.expect(res).to.have.any.keys('qa_salary_after_6_months');\r",
									"});\r",
									"\r",
									"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
									"pm.test(\"qa_salary_after_12_months_test\", function(){\r",
									"pm.expect(res).to.have.any.keys('qa_salary_after_12_months');\r",
									"});\r",
									"\r",
									"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
									"pm.test(\"qa_salary_after_1.5_year_test\", function(){\r",
									"pm.expect(res).to.have.any.keys('qa_salary_after_1.5_year');\r",
									"});\r",
									"\r",
									"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
									"pm.test(\"qa_salary_after_3.5_years\", function(){\r",
									"pm.expect(res).to.have.any.keys('qa_salary_after_3.5_years');\r",
									"});\r",
									"\r",
									"// 13. Проверить, что json response имеет параметр person\r",
									"pm.test(\"person_test\", function(){\r",
									"pm.expect(res).to.have.any.keys('person');\r",
									"});\r",
									"\r",
									"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
									"pm.test(\"start_qa_salary_test_2\", function () {\r",
									"    pm.expect(+res_start_qa_salary).to.eql(+req_salary);\r",
									"});\r",
									"\r",
									"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
									"pm.test(\"qa_salary_6_month_2\", function () {\r",
									"    pm.expect(+res_salary_6_month).to.eql(+req_salary*2);\r",
									"});\r",
									"\r",
									"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
									"pm.test(\"qa_salary_12_month_2\", function () {\r",
									"    pm.expect(+res_salary_12_month).to.eql(+req_salary*2.7);\r",
									"});\r",
									"\r",
									"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
									"pm.test(\"qa_salary_1and5_years_2\", function () {\r",
									"    pm.expect(+res_salary_1and5_years).to.eql(+req_salary*3.3);\r",
									"});\r",
									"\r",
									"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
									"pm.test(\"qa_salary_3and5_years_2\", function () {\r",
									"    pm.expect(+res_salary_3and5_years).to.eql(+req_salary*3.8);\r",
									"});\r",
									"\r",
									"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
									"pm.test(\"qa_salary_test_3\", function () {\r",
									"    pm.expect(+req_salary).to.eql(+res.person.u_name[1]);\r",
									"});\r",
									"\r",
									"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
									"pm.test(\"qa_age_test_2\", function () {\r",
									"    pm.expect(+req.age).to.eql(+res.person.u_age);\r",
									"});\r",
									"\r",
									"\r",
									"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
									"pm.test(\"qa_age_5_years_test_2\", function () {\r",
									"    pm.expect(+res_salary_5_years).to.eql(+req_salary*4.2);\r",
									"});\r",
									"\r",
									"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
									"for (key in res.person) {\r",
									"  if (res.person.hasOwnProperty(key)) {\r",
									"    //ключ = key\r",
									"    //значение = res.person[key]\r",
									"    console.log(\"Ключ = \" + key);\r",
									"    console.log(\"Значение = \" + res.person[key]);\r",
									"  } // если объект person имеет key (если у person есть свойство key)\r",
									"} // перерабрать все ключи (свойства) в объекте\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": "http://162.55.220.72:5007/user_info_2"
					},
					"response": []
				}
			]
		}
	]
}